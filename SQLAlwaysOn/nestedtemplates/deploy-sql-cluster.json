{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the VM, only certain regions support zones during preview."
      }
    },
    "instanceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the SQL instance to be created."
      }
    },
    "clusterIpAddress": {
      "type": "string",
      "defaultValue": "10.0.0.30"
    },
    "namePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 8,
      "metadata": {
        "description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Administrator of the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "sqlServiceAccount": {
      "type": "string",
      "metadata": {
        "description": "Name of the user account to be used for the SQL Server service account"
      }
    },
    "sqlServicePassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password to be used for the SQL Server service account"
      }
    },
    "agtServiceAccount": {
      "type": "string",
      "metadata": {
        "description": "Name of the user account to be used for the SQL Server service account"
      }
    },
    "agtServicePassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password to be used for the SQL Server service account"
      }
    },
    "Edition": {
      "type": "string",
      "allowedValues": [
        "Enterprise (x64)",
        "Standard (x64)"
      ]
    },
    "nicVnetUri": {
      "type": "string",
      "metadata": {
        "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet in the existing VNET to which the SQL Server VMs should be deployed"
      }
    },
    "enableOutboundInternet": {
      "type": "string",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Enable outbound Internet access via source NAT to support ongoing VM Agent extension communication needs"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the SQL Server VMs to be created"
      }
    },
    "vmCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 9,
      "metadata": {
        "description": "Number of SQL Server VMs to be created in AlwaysOn Availability Group cluster (Min=2, Max=9)"
      },
      "defaultValue": 2
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 128,
      "maxValue": 1023,
      "metadata": {
        "description": "Size of each data disk in GB on each SQL Server VM (Min=128, Max=1023)"
      }
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each SQL Server VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      }
    },
    "workloadType": {
      "type": "string",
      "defaultValue": "GENERAL"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftSQLServer"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "SQL2016SP1-WS2016"
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "Enterprise"
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest"
    },
    "bloburi": {
      "type": "string"
    },
    "blobsas": {
      "type": "string"
    }
  },
  "variables": {
    "apiVersionStorage": "2016-01-01",
    "witnessStorageName": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'cw')]",
    "witnessStorageType": "Standard_LRS",
    "vmNamePrefix": "[concat(parameters('namePrefix'),'-sql-')]",
    "clusterName": "[concat(variables('vmNamePrefix'),'c')]",
    "vmLoopTemplateURL": "[concat(parameters('bloburi'),'/newVM.json',parameters('blobsas'))]",
    "ipLoopTemplateURL": "[concat(parameters('bloburi'),'/getIpAddress.json',parameters('blobsas'))]",
    "sqlPrepModulesURL": "[concat(parameters('bloburi'),'/inst-sqlao.ps1.zip',parameters('blobsas'))]",
    "sqlPrepFunction": "PrepSQLAO.ps1\\PrepSQLAO",
    "sqlConfigModulesURL": "[concat(parameters('bloburi'),'/inst-sqlao.ps1.zip',parameters('blobsas'))]",
    "sqlConfigFunction": "PrepareSQLServer.ps1\\SQLServerPrepareDsc",
    "agName": "[concat(variables('vmNamePrefix'),'ag')]",
    "agListenerName": "[concat(variables('vmNamePrefix'),'agl')]",
    "agEpName": "[concat(variables('vmNamePrefix'),'ha')]",
    "albName": "[concat(variables('vmNamePrefix'),'alb')]",
    "albID": "[resourceId('Microsoft.Network/loadBalancers',variables('albName'))]",
    "albPip": "[concat(variables('vmNamePrefix'),'albpip')]",
    "albPipID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('albPip'))]",
    "albFE1": "[concat(variables('vmNamePrefix'),'albfe1')]",
    "albBE": "[concat(variables('vmNamePrefix'),'albbe')]",
    "albBEAddressPoolID": "[concat(variables('albID'),'/backendAddressPools/',variables('albBE'))]",
    "albBEPoolTemplateURL": "[concat(parameters('bloburi'),'/albBEPool.json',parameters('blobsas'))]",
    "albFEConfigID1": "[concat(variables('albID'),'/frontendIPConfigurations/',variables('albFE1'))]",
    "albProbe1": "[concat(variables('vmNamePrefix'),'albp1')]",
    "albProbeID1": "[concat(variables('albID'),'/probes/',variables('albProbe1'))]",
    "lbName": "[concat(variables('vmNamePrefix'),'ilb')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "lbFE1": "[concat(variables('vmNamePrefix'),'ilbfe1')]",
    "lbBE": "[concat(variables('vmNamePrefix'),'ilbbe')]",
    "lbFEConfigID1": "[concat(variables('lbID'),'/frontendIPConfigurations/',variables('lbFE1'))]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/',variables('lbBE'))]",
    "lbProbe1": "[concat(variables('vmNamePrefix'),'ilbp1')]",
    "lbProbeID1": "[concat(variables('lbID'),'/probes/',variables('lbProbe1'))]",
    "lbBEPoolTemplateURL": "[concat(parameters('bloburi'),'/lbBEPool.json',parameters('blobsas'))]",
    "agListenerPort": 1433,
    "agProbePort": 59999,
    "snatTcpPort": 59998,
    "snatProbePort": 3389,
    "zones": [ "1", "2", "3" ]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('witnessStorageName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('witnessStorageType')]"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2017-08-01",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFE1')]",
            "properties": {
              "privateIPAddress": "[parameters('clusterIpAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(parameters('nicVnetUri'),'/subnets/',parameters('existingSubnetName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBE')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('agListenerName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFEConfigID1')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('lbProbeID1')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[variables('agListenerPort')]",
              "backendPort": "[variables('agListenerPort')]",
              "enableFloatingIP": true
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('lbProbe1')]",
            "properties": {
              "protocol": "Tcp",
              "port": "[variables('agProbePort')]",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('albPip')]",
      "location": "[parameters('location')]",
      "condition": "[equals(parameters('enableOutboundInternet'),'Yes')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2017-08-01",
      "name": "[variables('albName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "condition": "[equals(parameters('enableOutboundInternet'),'Yes')]",
      "dependsOn": [
        "[variables('albPip')]"
      ],
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('albFE1')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('albPipID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('albBE')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "outbound-snat-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('albFEConfigID1')]"
              },
              "backendAddressPool": {
                "id": "[variables('albBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('albProbeID1')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[variables('snatTcpPort')]",
              "backendPort": "[variables('snatTcpPort')]",
              "enableFloatingIP": false
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('albProbe1')]",
            "properties": {
              "protocol": "Tcp",
              "port": "[variables('snatProbePort')]",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('location')]",
      "apiVersion": "2017-08-01",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(parameters('nicVnetUri'),'/subnets/',parameters('existingSubnetName'))]"
              },
              "primary": true
            }
          },
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(parameters('nicVnetUri'),'/subnets/',parameters('existingSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('vmNamePrefix'),'0-clusterIp')]",
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ipLoopTemplateURL')]"
        },
        "parameters": {
          "ipConfig": {
            "value": "[reference(concat(variables('vmNamePrefix'), '0-nic')).ipConfigurations[1].properties.privateIPAddress]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "clusterIpLoop",
        "count": "[sub(parameters('vmCount'),1)]"
      },
      "name": "[concat(variables('vmNamePrefix'),copyIndex(1),'-clusterIp')]",
      "dependsOn": [
        "nicLoop",
        "[concat(variables('vmNamePrefix'),'0-clusterIp')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ipLoopTemplateURL')]"
        },
        "parameters": {
          "ipConfig": {
            "value": "[reference(concat(variables('vmNamePrefix'), copyIndex(1), '-nic')).ipConfigurations[1].properties.privateIPAddress]"
          },
          "ipAddresses": {
            "value": "[reference(concat(variables('vmNamePrefix'),copyIndex(),'-clusterIp')).outputs.result.value]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat(variables('vmNamePrefix'),copyindex(),'-newVM')]",
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmLoopTemplateURL')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[concat(variables('vmNamePrefix'), copyindex())]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmDiskCount": {
            "value": "[parameters('vmDiskCount')]"
          },
          "vmDiskSize": {
            "value": "[parameters('vmDiskSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('bloburi')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('blobsas')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          },
          "imageVersion": {
            "value": "[parameters('imageVersion')]"
          },
          "zones": {
            "value": "[take(skip(variables('zones'),mod(copyIndex(),length(variables('zones')))),1)]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'), copyindex(), '/sqlConfig', copyindex())]",
      "apiVersion": "2017-03-30",
      "copy": {
        "name": "sqlconfigloop",
        "count": "[parameters('vmCount')]",
        "mode": "Serial",
        "batchSize": 1
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "virtualMachineLoop",
        "clusterIpLoop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.71",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('sqlConfigModulesURL')]",
          "configurationFunction": "[variables('sqlConfigFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "clusterName": "[variables('clusterName')]",
            "vmNamePrefix": "[variables('vmNamePrefix')]",
            "sqlInstanceName": "[parameters('instanceName')]",
            "vmCount": "[parameters('vmCount')]",
            "clusterIp": "[parameters('clusterIpAddress')]",
            "witnessStorageBlobEndpoint": "[reference(variables('witnessStorageName'), '2016-01-01').primaryEndpoints.blob]",
            "witnessStorageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "sqlServiceCreds": {
              "userName": "[parameters('sqlServiceAccount')]",
              "password": "PrivateSettingsRef:sqlServicePassword"
            },
            "agtServiceCreds": {
              "userName": "[parameters('agtServiceAccount')]",
              "password": "PrivateSettingsRef:agtServicePassword"
            },
            "bloburi": "[parameters('bloburi')]",
            "blobsas": "[parameters('blobsas')]",
            "Edition": "[parameters('Edition')]"
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "sqlServicePassword": "[parameters('sqlServicePassword')]",
            "agtServicePassword": "[parameters('agtServicePassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('vmNamePrefix'),'lbbepool')]",
      "condition": "[equals(parameters('enableOutboundInternet'),'No')]",
      "dependsOn": [
        "sqlconfigloop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('lbBEPoolTemplateURL')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmNamePrefix": {
            "value": "[variables('vmNamePrefix')]"
          },
          "vmCount": {
            "value": "[parameters('vmCount')]"
          },
          "nicVnetUri": {
            "value": "[parameters('nicVnetUri')]"
          },
          "existingSubnetName": {
            "value": "[parameters('existingSubnetName')]"
          },
          "lbBEAddressPoolID": {
            "value": "[variables('lbBEAddressPoolID')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[concat(variables('vmNamePrefix'),'albbepool')]",
      "condition": "[equals(parameters('enableOutboundInternet'),'Yes')]",
      "dependsOn": [
        "sqlconfigloop"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('albBEPoolTemplateURL')]"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmNamePrefix": {
            "value": "[variables('vmNamePrefix')]"
          },
          "vmCount": {
            "value": "[parameters('vmCount')]"
          },
          "nicVnetUri": {
            "value": "[parameters('nicVnetUri')]"
          },
          "existingSubnetName": {
            "value": "[parameters('existingSubnetName')]"
          },
          "lbBEAddressPoolID": {
            "value": "[variables('lbBEAddressPoolID')]"
          },
          "albBEAddressPoolID": {
            "value": "[variables('albBEAddressPoolID')]"
          }
        }
      }
    }
  ],
    "outputs": {
        "agListenerName": {
            "type": "string",
            "value": "[variables('agListenerName')]"
        }
    }
}